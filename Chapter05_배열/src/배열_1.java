/*
 * 					 사용자 요청
 *   데이터 관리 ===== 데이터 가공 ======== 화면 출력
 *   => 변수          연산자              1) Application
 *   => 배열          제어문				   콘솔/윈도우
 *   									   => 네트워크
 *   => 클래스                           2) webApplication
 *   									   브라우저(데이터베이스)
 *   								   3) MobileApplication
 *										  XML, JSOM, Flutter/Dart
 *	 => 데이터관리 / 재사용
 *		=> 데이터를 묶어서 관리
 *		   -------------- 같은 데이터형/관련된 데이터끼리 묶기 => 배열
 *						  다른 데이터형(학생정보, 맛집정보..) => 클래스
 *		=> 재사용 => 다른 클래스에서 사용
 *		   메소드 : 연산자/제어문
 *		   ---------------- 명령문을 어떻게 묶어서 사용할지
 *	  => 프로그램은 누가 관련된 것을 잘 묶는가가 관건
 *					------- 재사용
 *	배열, 클래스, 변수 => 메모리에 저장
 *	변수 : 스택
 *	클래스/배열 => 힙(주소참조:참조형 변수)
 *	1) 배열 => 일차원/이차원:로직
 *	   -----------
 *	2) 배열 선언
 *	3) 배열초기화
 *	4) 배열 사용방법 => 인덱스
 *	5) 데이터 저장 방법
 *	6) 배열 목사
 *		= 주소 참조
 *		= 새로운 배열 생성
 *		= Call By Value / Call By Reference
 *	----------------------------------------
 *	1. 배열의 특징
 *		= 같은 데이터형을 연속적으로 메모리 저장
 *					 -----
 *		= 저장된 각 데이터가 인덱스를 가지고 있다
 *		  => 인덱스는 0번부터 ~ 순차적으로 나열 => for을 처리
 *		= 고정적이다 : 한번 선언하면 수정할 수 없다
 *					데이터 삭제가 불가능하다	
 *		  => 가변형 : 컬렉션(15장) => 라이브러리	  
 *	2. 배치
 *		int[] arr={1,2,3,4,5}
 *		
 *		 스택       |    실제 데이터 저장(힙) => 연속적인 메모리공간
 *      int[] arr;       0x100  0x104  0x108  0x112   0x116  (4byte씩)
 *      -----------      ------------------------------------
 *      [I@5305068a -->   1      2      3      4       5
 *      -----------     |------------------------------------
 *                        |      |      |      |      |
 *                       arr[0] arr[1] arr[2] arr[3] arr[4] => 실제 일반 변수와 동일한 역할을 수행
 *				        [I@5305068a								값 변경 => arr[0]=10
 *						 0x100(가상)                             => 인덱스는 0부터 시작
 *																=> arr+0 => 100(주솟값)
 *																   arr+1 => 104(주솟값)
 *																   arr+2 => 108(주솟값)
 *		** 프로그램을 쉽게 제어하기 위해서 반드시 여러개를 한개의 이름으로 제어
 *											 -------- 변수가 여러개일때=>배열
 *													  데이터형이 섞인 정보(맛집,레시피,영화)=>**클래스(사용자정의데이터형)(6장)
 *																					 캡슐화 : 보안
 *																					 상속 : 공통사용=>재사용 
 *																					 필요시 수정,추가 가능  
 *														=> 한개의 이름으로 제어 : 인터페이스
 *															개/소/말/돼지 => 동물
 *															게시판/댓글형/묻고답하기/갤러리게시판 => 게시판 인터페이스
 *	---------------------------------------------------------------------------------------------------------
 *  배열 
 *    => 같은 데이터형끼리 묶는다 => 관련된 데이터를 묶어서 
 *    => 예) 3명의 학생 => 성적관리
 *    						  --- String/char
 *    		국어,영어,수학,총점,평균,학점,등수 
 *    		--------------		  --- int
 *    					   --- double
 *    		=> 7개의 배열
 *    		=> 웹 개발은 일차원 배열만 주로 사용
 *    		=> 서버개발(C/C++)
 *    						          
 *	
 * */
public class 배열_1 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int a=10,b=20,c=30,d=40,e=50;
		int total=a+b+c+d+e;
		double avg=total/3.0;
		System.out.println("a="+a);
		System.out.println("b="+b);
		System.out.println("c="+c);
		System.out.println("d="+d);
		System.out.println("e="+e);
		System.out.println("총합:"+total);
		System.out.println("평균:"+avg); //다 따로 처리
		
		System.out.println("======= 데이터를 묶어서 처리 =======");
		/*
		 * 배열의 선언
		 * int[] 배열명; => 권장
		 * int 배열명[]; => C언어에서 파생
		 * 
		 * 배열의 초기화 방법
		 * 선언과 동시에 초기화
		 *  int[] 배열명={1,2,3,4,5} 4byte메모리 공간을 5개 연속적으로 배치
		 * 기본값으로 초기화
		 *  int[] 배열명=new int[5]
		 *                    --- 저장갯수 => 자동으로 0값으로 초기화
		 *                    			   (double:0.0, boolean:false, char:'\0',long:01,String:null)
		 */
		
		int[] arr={a,b,c,d,e};
		System.out.println("배열데이터 갯수:"+arr.length);
		for(int i=0;i<5;i++)
		{
			System.out.println("arr["+i+"]="+arr[i]);
		}
	}

}
