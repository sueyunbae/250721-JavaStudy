/*
 * 제어문을 사용하는 이유
 * 	프로그램 순차적 => 위에서 아래로 이동하면서 실행
 *  ----------------------------------------
 *   순차문 조건문 반복문
 *     |     |    | 같은 기능을 여러번 수행
 *    문법   필요시에만 문장을 수행
 *   => 상황에 따라 다른 기능을 수행할 수 있게 만든다
 *  ----------------------------------------
 *  조건에 따라 다르게 동작 : if/switch 
 *  반복 작업 수행 = while / for 
 *  -----------
 *   => 효율적인 코드 작성
 *   
 * 자바 지원하는 제어문
 * 조건문
 * 	**= 단일조건문
 * 		if(조건문) => 조건문 : 비교연산자, 논리연산자, 부정연산자
 * 		{
 * 			실행문장(조건문이 true일 때 실행)
 * 		}
 * 		=> 오류 방지 => 처리가 안되는 문장 : 예외처리
 * 	**= 선택조건문 
 * 		true / false 일 때 나눠서 작업
 * 		if(조건문)
 * 		{
 *			조건 true 
 * 		}
 * 		else
 * 		{
 *			조건 false
 * 		}
 * 	= 다중조건문 : 조건에 맞는 문장만 수행 => 1개의 조건만 수행
 *    ------- 간결하게 표현
 * 선택문 : switch ~ case
 * 반복문 
 * 		while : 반복횟수가 지정이 안된 경우
 * 		do ~ while : 반드시 한번 이상 수행(앞으로 잘 안씀)
 * 		for : 반복횟수가 지정된 경우
 * 				=> 화면 출력
 * 반복제어문 : break 종료
 * 			  continue 특정부분을 제외
 * 
 * 제어문
 * => 단일 조건문
 * 	  형식)
 * 		if(조건문) => 부정연산자, 논리연산자,
 * 		{
 * 			조건 => true면 수행하는 문장
 * 		}            false
 * 		if(조건문)----------------->
 * 		{    | true
 * 			수행문장
 * 		}
 *      => 자바에서 사용하는 모든 제어문은 바로 밑에 있는 문장 한개만 수행
 *      if(조건문)
 *      	문장 1 ==> 여기만 수행
 *      	문장 2 ==> if와 관계없는 문장 => 무조건 수행하는 문장
 *      
 *      여러개 문장을 동시 수행
 *      if(조건문)
 *      {
 *      	문장 1
 *      	문장 2      
 *      }
 * 
 * 1. 정수입력 => 짝수/홀수
 * 
 * */
import java.util.Scanner;
public class 제어문 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner scan=new Scanner(System.in);
		System.out.print("정수 입력:");
		int num=scan.nextInt();
		
		if(num%2==0)
			System.out.println(num+"는(은) 짝수다");
		if(num%2!=0)
			System.out.println(num+"는(은) 홀수다");

	}

}
